@mixin adaptivValue($property, $startSize, $minSize, $type) {
    $addSize: $startSize - $minSize;
    @if $type==1 {
        #{$property}: $startSize + px;
        @media (max-width: #{$maxWidthContainer + px}) {
            #{$property}: calc(#{$minSize + px} + #{$addSize} * ((100vw - 320px) /#{$maxWidthContainer - 320}));
        }
    } @else if $type == 2 {
        #{$property}: $startSize + px;
        @media (min-width: #{$maxWidthContainer + px}) {
            #{$property}: calc(#{$minSize + px} + #{$addSize} * ((100vw - 320px) /#{$maxWidth - 320}));
        }
    } @else {
        #{$property}: calc(#{$minSize + px} + #{$addSize} * ((100vw - 320px) /#{$maxWidth - 320}));
    }
}

$maxWidth: 1920;
$maxWidthContainer: 1600;

.in-action {
    @include adaptivValue("padding-bottom", 80, 60, 1);
    @include adaptivValue("padding-top", 80, 60, 1);
    .container {
        position: relative;
        .circle {
            position: absolute;
            right: -135px;
            top: -60%;
        }
    }
}
.video {
    text-decoration: none;
    &__img {
        position: relative;
        margin-bottom: 20px;
    }
    &__name {
        font-size: 22px;
        font-weight: 600;
        line-height: 1.352;

        color: #fff;
    }
    &__play {
        position: absolute;
        left: 0;
        right: 0;
        top: 50%;
        transform: translateY(-50%);
        margin: 0 auto;
        width: 52px;
        height: 52px;
        background-image: linear-gradient(to right, #6b7aff, #4940f2, #4940f2, #6b7aff);
        background-size: 300% 100%;
        transition: all 0.5s ease-in-out;
        display: flex;
        align-items: center;
        justify-content: center;
        border-radius: 50%;
        svg {
            margin-left: 3px;
        }
    }
    img {
        width: 100%;
        object-fit: cover;
        border-radius: 32px;
    }
}
.video-slider {
    margin-bottom: 40px;
}
